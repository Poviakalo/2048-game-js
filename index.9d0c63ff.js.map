{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js"],"sourcesContent":["\"use strict\";\nvar $a5fd07fa01589658$exports = {};\n\"use strict\";\nclass $a5fd07fa01589658$var$Game {\n    constructor(initialState = [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ]){\n        this.board = initialState;\n        this.score = 0;\n        this.status = `idle`;\n    }\n    transposeBoard() {\n        this.board = this.board[0].map((_, colIndex)=>this.board.map((row)=>row[colIndex]));\n    }\n    moveLeft() {\n        const newBoard = this.board.map((row)=>{\n            const filteredRow = row.filter((cell)=>cell > 0);\n            for(let i = 0; i < filteredRow.length - 1; i++)if (filteredRow[i] === filteredRow[i + 1]) {\n                filteredRow[i] *= 2;\n                this.score += filteredRow[i];\n                filteredRow.splice(i + 1, 1);\n            }\n            while(filteredRow.length < 4)filteredRow.push(0);\n            return filteredRow;\n        });\n        if (JSON.stringify(newBoard) !== JSON.stringify(this.board)) {\n            this.board = newBoard;\n            this.generateRandomTile();\n        }\n    }\n    moveRight() {\n        this.board = this.board.map((row)=>row?.reverse());\n        this.moveLeft();\n        this.board = this.board.map((row)=>row?.reverse());\n    }\n    moveUp() {\n        this.transposeBoard();\n        this.moveLeft();\n        this.transposeBoard();\n    }\n    moveDown() {\n        this.transposeBoard();\n        this.moveRight();\n        this.transposeBoard();\n    }\n    getScore() {\n        return this.score;\n    }\n    getState() {\n        return this.board.map((row)=>[\n                ...row\n            ]);\n    }\n    getStatus() {\n        return this.status;\n    }\n    start() {\n        this.status = \"playing\";\n        this.board = [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        this.score = 0;\n        this.generateRandomTile();\n        this.generateRandomTile();\n    }\n    restart() {\n        this.board = [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        this.score = 0;\n        this.status = \"idle\";\n        this.generateRandomTile();\n        this.generateRandomTile();\n        this.status = \"playing\";\n    }\n    generateRandomTile() {\n        const emptyCells = [];\n        this.board.forEach((row, i)=>{\n            row.forEach((cell, j)=>{\n                if (cell === 0) emptyCells.push([\n                    i,\n                    j\n                ]);\n            });\n        });\n        if (emptyCells.length === 0) return;\n        const [x, y] = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n        this.board[x][y] = Math.random() < 0.1 ? 4 : 2;\n    }\n    canMove() {\n        for(let i = 0; i < 4; i++)for(let j = 0; j < 4; j++){\n            if (this.board[i][j] === 0) return true;\n            if (j < 3 && this.board[i][j] === this.board[i][j + 1]) return true;\n            if (i < 3 && this.board[i][j] === this.board[i + 1][j]) return true;\n        }\n        return false;\n    }\n    updateBoard() {\n        if (!this.canMove()) this.status = \"lose\";\n        this.board.forEach((row)=>{\n            if (row.find((el)=>el === 2048)) this.status = \"win\";\n        });\n    }\n}\n$a5fd07fa01589658$exports = $a5fd07fa01589658$var$Game;\n\n\nconst $09e991522ca7e64e$var$game = new $a5fd07fa01589658$exports();\nconst $09e991522ca7e64e$var$button = document.querySelector(\".button\");\nconst $09e991522ca7e64e$var$gameField = document.querySelector(\".game-field\");\nconst $09e991522ca7e64e$var$scoreDisplay = document.querySelector(\".game-score\");\n$09e991522ca7e64e$var$button.addEventListener(\"click\", ()=>{\n    if ($09e991522ca7e64e$var$game.status !== \"playing\") {\n        $09e991522ca7e64e$var$game.start();\n        $09e991522ca7e64e$var$button.classList.remove(\"start\");\n        $09e991522ca7e64e$var$button.classList.add(\"restart\");\n        $09e991522ca7e64e$var$button.textContent = \"Restart\";\n    } else $09e991522ca7e64e$var$game.restart();\n    $09e991522ca7e64e$var$renderBoard();\n    $09e991522ca7e64e$var$updateMessages($09e991522ca7e64e$var$game.status);\n});\nfunction $09e991522ca7e64e$var$renderBoard() {\n    const cells = $09e991522ca7e64e$var$gameField.querySelectorAll(\".field-cell\");\n    const board = $09e991522ca7e64e$var$game.getState();\n    cells.forEach((cell, index)=>{\n        const row = Math.floor(index / 4);\n        const col = index % 4;\n        cell.className = \"field-cell\";\n        if (board[row][col] !== 0) {\n            cell.textContent = board[row][col];\n            cell.classList.add(`field-cell--${board[row][col]}`);\n        } else cell.textContent = \"\";\n    });\n    $09e991522ca7e64e$var$scoreDisplay.textContent = $09e991522ca7e64e$var$game.getScore();\n}\ndocument.addEventListener(\"keydown\", (e)=>{\n    if ($09e991522ca7e64e$var$game.status !== \"playing\") return;\n    switch(e.key){\n        case \"ArrowLeft\":\n            $09e991522ca7e64e$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $09e991522ca7e64e$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            $09e991522ca7e64e$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $09e991522ca7e64e$var$game.moveDown();\n            break;\n    }\n    $09e991522ca7e64e$var$game.updateBoard();\n    $09e991522ca7e64e$var$renderBoard();\n    $09e991522ca7e64e$var$updateMessages($09e991522ca7e64e$var$game.status);\n});\nfunction $09e991522ca7e64e$var$updateMessages(state) {\n    const messageLose = document.querySelector(\".message-lose\");\n    const messageWin = document.querySelector(\".message-win\");\n    const messageStart = document.querySelector(\".message-start\");\n    messageLose.classList.add(\"hidden\");\n    messageWin.classList.add(\"hidden\");\n    messageStart.classList.add(\"hidden\");\n    switch(state){\n        case \"lose\":\n            messageLose.classList.remove(\"hidden\");\n            break;\n        case \"win\":\n            messageWin.classList.remove(\"hidden\");\n            break;\n        case \"idle\":\n            messageStart.classList.remove(\"hidden\");\n            break;\n    }\n}\n\n\n//# sourceMappingURL=index.9d0c63ff.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst button = document.querySelector('.button');\nconst gameField = document.querySelector('.game-field');\nconst scoreDisplay = document.querySelector('.game-score');\n\nbutton.addEventListener('click', () => {\n  if (game.status !== 'playing') {\n    game.start();\n    button.classList.remove('start');\n    button.classList.add('restart');\n    button.textContent = 'Restart';\n  } else {\n    game.restart();\n  }\n\n  renderBoard();\n  updateMessages(game.status);\n});\n\nfunction renderBoard() {\n  const cells = gameField.querySelectorAll('.field-cell');\n  const board = game.getState();\n\n  cells.forEach((cell, index) => {\n    const row = Math.floor(index / 4);\n    const col = index % 4;\n\n    cell.className = 'field-cell';\n\n    if (board[row][col] !== 0) {\n      cell.textContent = board[row][col];\n      cell.classList.add(`field-cell--${board[row][col]}`);\n    } else {\n      cell.textContent = '';\n    }\n  });\n\n  scoreDisplay.textContent = game.getScore();\n}\n\ndocument.addEventListener('keydown', (e) => {\n  if (game.status !== 'playing') {\n    return;\n  }\n\n  switch (e.key) {\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n  }\n\n  game.updateBoard();\n  renderBoard();\n  updateMessages(game.status);\n});\n\nfunction updateMessages(state) {\n  const messageLose = document.querySelector('.message-lose');\n  const messageWin = document.querySelector('.message-win');\n  const messageStart = document.querySelector('.message-start');\n\n  messageLose.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  messageStart.classList.add('hidden');\n\n  switch (state) {\n    case 'lose':\n      messageLose.classList.remove('hidden');\n      break;\n    case 'win':\n      messageWin.classList.remove('hidden');\n      break;\n    case 'idle':\n      messageStart.classList.remove('hidden');\n      break;\n  }\n}\n","'use strict';\n\nclass Game {\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.board = initialState;\n    this.score = 0;\n    this.status = `idle`;\n  }\n\n  transposeBoard() {\n    this.board = this.board[0].map(\n      (_, colIndex) => this.board.map((row) => row[colIndex]),\n      // eslint-disable-next-line function-paren-newline\n    );\n  }\n\n  moveLeft() {\n    const newBoard = this.board.map((row) => {\n      const filteredRow = row.filter((cell) => cell > 0);\n\n      for (let i = 0; i < filteredRow.length - 1; i++) {\n        if (filteredRow[i] === filteredRow[i + 1]) {\n          filteredRow[i] *= 2;\n          this.score += filteredRow[i];\n          filteredRow.splice(i + 1, 1);\n        }\n      }\n\n      while (filteredRow.length < 4) {\n        filteredRow.push(0);\n      }\n\n      return filteredRow;\n    });\n\n    if (JSON.stringify(newBoard) !== JSON.stringify(this.board)) {\n      this.board = newBoard;\n      this.generateRandomTile();\n    }\n  }\n\n  moveRight() {\n    this.board = this.board.map((row) => row?.reverse());\n    this.moveLeft();\n    this.board = this.board.map((row) => row?.reverse());\n  }\n\n  moveUp() {\n    this.transposeBoard();\n    this.moveLeft();\n    this.transposeBoard();\n  }\n\n  moveDown() {\n    this.transposeBoard();\n    this.moveRight();\n    this.transposeBoard();\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.board.map((row) => [...row]);\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = 'playing';\n\n    this.board = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n    this.score = 0;\n    this.generateRandomTile();\n    this.generateRandomTile();\n  }\n\n  restart() {\n    this.board = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    this.score = 0;\n\n    this.status = 'idle';\n\n    this.generateRandomTile();\n    this.generateRandomTile();\n\n    this.status = 'playing';\n  }\n\n  generateRandomTile() {\n    const emptyCells = [];\n\n    this.board.forEach((row, i) => {\n      row.forEach((cell, j) => {\n        if (cell === 0) {\n          emptyCells.push([i, j]);\n        }\n      });\n    });\n\n    if (emptyCells.length === 0) {\n      return;\n    }\n\n    const [x, y] = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n    this.board[x][y] = Math.random() < 0.1 ? 4 : 2;\n  }\n\n  canMove() {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.board[i][j] === 0) {\n          return true;\n        }\n\n        if (j < 3 && this.board[i][j] === this.board[i][j + 1]) {\n          return true;\n        }\n\n        if (i < 3 && this.board[i][j] === this.board[i + 1][j]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  updateBoard() {\n    if (!this.canMove()) {\n      this.status = 'lose';\n    }\n\n    this.board.forEach((row) => {\n      if (row.find((el) => el === 2048)) {\n        this.status = 'win';\n      }\n    });\n  }\n}\n\nmodule.exports = Game;\n"],"names":["$09e991522ca7e64e$var$game","constructor","initialState","board","score","status","transposeBoard","map","_","colIndex","row","moveLeft","newBoard","filteredRow","filter","cell","i","length","splice","push","JSON","stringify","generateRandomTile","moveRight","reverse","moveUp","moveDown","getScore","getState","getStatus","start","restart","emptyCells","forEach","j","x","y","Math","floor","random","canMove","updateBoard","find","el","$09e991522ca7e64e$var$button","document","querySelector","$09e991522ca7e64e$var$gameField","$09e991522ca7e64e$var$scoreDisplay","$09e991522ca7e64e$var$renderBoard","cells","querySelectorAll","index","col","className","textContent","classList","add","$09e991522ca7e64e$var$updateMessages","state","messageLose","messageWin","messageStart","remove","addEventListener","e","key"],"version":3,"file":"index.9d0c63ff.js.map"}